type Query {
  classes: [Class!]!
}

type Mutation {
  createClass(
    createClassDto: CreateClassDto!
  ): Class!
}

type Mutation {
  register(
    username: String!
    password: String!
    role: String!
  ): User!
}

type Query {
  searchClasses(
    name: String
    teacherName: String
    classLeaderName: String
  ): [Class!]!
}

input CreateUserDto {
  username: String!
  password: String!
  role: String!
}

input CreateClassDto {
  name: String!
  subject: String!
  teacherId: Int!
  classLeaderId: Int
}

type Class {
  id: Int!
  name: String!
  subject: String!
  teacher: User!
  classLeader: User
  currentStudentsCount: Int!
  enrollments: [Enrollment!]!
}

type Enrollment {
  id: Int!
  student: User!
  class: Class!
}

type User {
  id: Int!
  username: String!
  password: String!
  role: String!
}

type Query {
  user: User!
  classes: [Class!]!
  class: Class!
  searchClasses: [Class!]!
  enrollmentsByStudent: [Enrollment!]!
  enrollmentsByClass: [Enrollment!]!
  checkAuth: String!
}

type Mutation {
  createUser: User!
  updateUser: User!
  createClass: Class!
  updateClass: Class!
  deleteClass: Boolean!
  enrollStudent: Enrollment!
  removeEnrollment: Boolean!
  login: String!
  register: User!
}

